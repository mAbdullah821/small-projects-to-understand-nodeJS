{
  "openapi": "3.0.0",
  "info": {
    "title": "JWT Invalidation",
    "description": "Invalidate JWT using a database blacklist technique with whitelist caching",
    "version": "1.0.0"
  },
  "servers": [
    { "url": "http://localhost:3030/", "description": "Localhost app server" }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "name": "Authorization",
        "description": "Bearer token to access these api endpoints"
      }
    },
    "schemas": {
      "signup": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "newUser"
          }
        },
        "required": ["username"]
      },
      "login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "deviceName": {
            "type": "string"
          }
        },
        "required": ["username", "deviceName"]
      },
      "successfulSingup": {
        "allOf": [
          { "$ref": "#components/schemas/successful" },
          {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "successfulLogin": {
        "allOf": [
          {
            "$ref": "#components/schemas/successful"
          },
          {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              }
            }
          }
        ]
      },
      "successful": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Success"
          },
          "msg": {
            "type": "string"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Error"
          },
          "msg": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/signup": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "description": "Use a unique username to register",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/signup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully :)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/successfulSingup"
                },
                "example": {
                  "status": "Success",
                  "msg": "Account created successfully :)",
                  "user": {
                    "id": "2",
                    "username": "user"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Missing required attribute": {
                    "value": {
                      "status": "Error",
                      "msg": "username is not provided!"
                    }
                  },
                  "User Already Registered": {
                    "value": {
                      "status": "Error",
                      "msg": "User already registered. Please choose a different username."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Database Error": {
                    "value": {
                      "status": "Error",
                      "msg": "Internal Database Server error!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "login",
        "requestBody": {
          "description": "Login with 'username' & 'deviceName'",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/login"
              },
              "example": {
                "username": "user",
                "deviceName": "device1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/successfulLogin"
                },
                "example": {
                  "status": "Success",
                  "msg": "Successful login :)",
                  "token": "eyJhbGciOiJIUzI1NiIsIn689CI6IkpXVCJ9.eyJleHAiOjE2ODg5OTMwNTQsInVzZXJJZCI6MSwiZGV2aWNlSWQiOjMsInJ1bGUiOiJhZG1pbiIsImlhdCI6MTY4ODk4OTQ1NH0._xorStr-XjmozGPzHbtUAtvhPUFpdsVmBC2lRMPDB6U"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Missing required attribute": {
                    "value": {
                      "status": "Error",
                      "msg": "Missing required attributes. Please provide 'username' and 'deviceName'."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Not Registered User": {
                    "value": {
                      "status": "Error",
                      "msg": "The user is not registered!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Database Error": {
                    "value": {
                      "status": "Error",
                      "msg": "Internal Database Server error!"
                    }
                  },
                  "Error Invalidating Previous Token": {
                    "value": {
                      "status": "Error",
                      "msg": "Unable to invalidate device token!"
                    }
                  },
                  "Token Creation Error": {
                    "value": {
                      "status": "Error",
                      "msg": "Cannot update token expiration for that device!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Welcome user",
        "description": "Display the user data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/successful"
                },
                "examples": {
                  "Registered User": {
                    "value": {
                      "status": "Success",
                      "msg": "Hi, 'user' from [device] with (user) privilege :)"
                    }
                  },
                  "Non Registered User": {
                    "value": {
                      "status": "Success",
                      "msg": "Hi, 'stranger' from [somewhere] with (undefined) privilege :)"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Invalid Token": {
                    "value": {
                      "status": "Error",
                      "msg": "Invalid bearer token!"
                    }
                  },
                  "Blacklisted Token": {
                    "value": {
                      "status": "Error",
                      "msg": "Blacklisted token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Cache Error": {
                    "value": {
                      "status": "Error",
                      "msg": "Internal Cache error!"
                    }
                  },
                  "Database Error": {
                    "value": {
                      "status": "Error",
                      "msg": "Internal Database Server error!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/logout/{type}": {
      "get": {
        "summary": "User logout",
        "description": "Logout user by invalid the JWT token either from a single device or from all devices",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "description": "Choose one type from:\r\n\r\n \tsingleDevice:-> for single device invalidation.\r\n\r\n \tallDevices:-> for all devices invalidation.",
            "schema": {
              "type": "string",
              "enum": ["singleDevice", "allDevices"],
              "example": "singleDevice"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Logout"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Invalid Token": {
                    "value": {
                      "status": "Error",
                      "msg": "Invalid bearer token!"
                    }
                  },
                  "Blacklisted Token": {
                    "value": {
                      "status": "Error",
                      "msg": "Blacklisted token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not-Valid Path",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "example": {
                  "status": "Error",
                  "msg": "Not valid path!"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Cache Error": {
                    "value": {
                      "status": "Error",
                      "msg": "Internal Cache error!"
                    }
                  },
                  "Database Error": {
                    "value": {
                      "status": "Error",
                      "msg": "Internal Database Server error!"
                    }
                  },
                  "Invalidation Failed": {
                    "value": {
                      "status": "Error",
                      "msg": "Unable to invalidate token!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/invalidate/{type}/{userId}": {
      "get": {
        "summary": "User Invalidation by Admins",
        "description": "Logout a user or all users by invalidating their JWT tokens.",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "description": "Choose one type from:\r\n\r\n \tsingleUser:-> for single user invalidation.\r\n\r\n \tallUsers:-> for all users invalidation.",
            "schema": {
              "type": "string",
              "enum": ["singleUser", "allUsers"]
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Enter user ID to invalidate single user or '-1' for all users.",
            "schema": {
              "type": "integer",
              "minimum": -1
            },
            "examples": {
              "Single User": { "value": 2 },
              "All Users": { "value": -1 }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Invalidation"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Invalid Token": {
                    "value": {
                      "status": "Error",
                      "msg": "Invalid bearer token!"
                    }
                  },
                  "Blacklisted Token": {
                    "value": {
                      "status": "Error",
                      "msg": "Blacklisted token"
                    }
                  },
                  "Unauthorized User": {
                    "value": {
                      "status": "Error",
                      "msg": "User unauthorized for these routes!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not-Valid Path",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "example": {
                  "status": "Error",
                  "msg": "Not valid path!"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/error"
                },
                "examples": {
                  "Cache Error": {
                    "value": {
                      "status": "Error",
                      "msg": "Internal Cache error!"
                    }
                  },
                  "Database Error": {
                    "value": {
                      "status": "Error",
                      "msg": "Internal Database Server error!"
                    }
                  },
                  "Invalidation Failed": {
                    "value": {
                      "status": "Error",
                      "msg": "Unable to invalidate token!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
